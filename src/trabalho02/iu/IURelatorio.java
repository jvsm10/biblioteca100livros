/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho02.iu;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import trabalho02.controlador.Controlador;
import trabalho02.modelo.Emprestimo;
import trabalho02.modelo.Item;
import trabalho02.modelo.Livro;
import trabalho02.modelo.Usuario;

/**
 *
 * @author Gustavo
 */
public class IURelatorio extends javax.swing.JFrame {

    /**
     * Creates new form IURelatorio
     */
    public IURelatorio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Root = new javax.swing.JPanel();
        Inicio = new javax.swing.JPanel();
        TodosUsuarios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        TodosAlunos = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tabela1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        TodosProfessores = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tabela2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        LivrosEmprestadosUsuario = new javax.swing.JPanel();
        text1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_confirmar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabela3 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        LivrosNaoDevolvidosUsuario = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        text2 = new javax.swing.JTextField();
        btn_confirmar1 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        tabela4 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        TodosLivros = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabela5 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        LivrosDisponiveis = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabela6 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        LivrosEmprestados = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabela7 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        LivrosComAtraso = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tabela8 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        UsuariosComAtraso = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tabela9 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuRelatorios = new javax.swing.JMenu();
        menuTodosUsuarios = new javax.swing.JMenuItem();
        menuTodosAlunos = new javax.swing.JMenuItem();
        menuTodosProfessores = new javax.swing.JMenuItem();
        menuLivrosEmprestadosUsuario = new javax.swing.JMenuItem();
        menuLivrosNaoDevolvidosUsuario = new javax.swing.JMenuItem();
        menuTodosLivros = new javax.swing.JMenuItem();
        menuLivrosDisponiveis = new javax.swing.JMenuItem();
        menuLivrosEmprestados = new javax.swing.JMenuItem();
        menuLivrosAtraso = new javax.swing.JMenuItem();
        menuUsariosAtraso = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Root.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout InicioLayout = new javax.swing.GroupLayout(Inicio);
        Inicio.setLayout(InicioLayout);
        InicioLayout.setHorizontalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 878, Short.MAX_VALUE)
        );
        InicioLayout.setVerticalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        Root.add(Inicio, "inicio");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Possui Emprestimo", "Possui Atraso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Todos os Usu치rios");

        javax.swing.GroupLayout TodosUsuariosLayout = new javax.swing.GroupLayout(TodosUsuarios);
        TodosUsuarios.setLayout(TodosUsuariosLayout);
        TodosUsuariosLayout.setHorizontalGroup(
            TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(TodosUsuariosLayout.createSequentialGroup()
                .addGap(346, 346, 346)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TodosUsuariosLayout.setVerticalGroup(
            TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosUsuariosLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Root.add(TodosUsuarios, "TodosUsuarios");

        tabela1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Possui Emprestimo", "Possui Atraso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tabela1);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Todos os Alunos");

        javax.swing.GroupLayout TodosAlunosLayout = new javax.swing.GroupLayout(TodosAlunos);
        TodosAlunos.setLayout(TodosAlunosLayout);
        TodosAlunosLayout.setHorizontalGroup(
            TodosAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosAlunosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(TodosAlunosLayout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TodosAlunosLayout.setVerticalGroup(
            TodosAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosAlunosLayout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Root.add(TodosAlunos, "TodosAlunos");

        tabela2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Possui Emprestimo", "Possui Atraso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tabela2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Todos os Professores");

        javax.swing.GroupLayout TodosProfessoresLayout = new javax.swing.GroupLayout(TodosProfessores);
        TodosProfessores.setLayout(TodosProfessoresLayout);
        TodosProfessoresLayout.setHorizontalGroup(
            TodosProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosProfessoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(TodosProfessoresLayout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TodosProfessoresLayout.setVerticalGroup(
            TodosProfessoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosProfessoresLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Root.add(TodosProfessores, "TodosProfessores");

        text1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        text1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text1ActionPerformed(evt);
            }
        });
        text1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("C칩digo do Usu치rio:");

        btn_confirmar.setText("Confirmar");
        btn_confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarActionPerformed(evt);
            }
        });

        tabela3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo Livro", "Nome", "Situa칞칚o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabela3);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Livros Emprestados por um Usu치rio");

        javax.swing.GroupLayout LivrosEmprestadosUsuarioLayout = new javax.swing.GroupLayout(LivrosEmprestadosUsuario);
        LivrosEmprestadosUsuario.setLayout(LivrosEmprestadosUsuarioLayout);
        LivrosEmprestadosUsuarioLayout.setHorizontalGroup(
            LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addGroup(LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_confirmar)))
                .addContainerGap(364, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4))
        );
        LivrosEmprestadosUsuarioLayout.setVerticalGroup(
            LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_confirmar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );

        Root.add(LivrosEmprestadosUsuario, "LivrosEmprestadosUsuario");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("C칩digo do Usu치rio:");

        text2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        text2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text2ActionPerformed(evt);
            }
        });
        text2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text2KeyPressed(evt);
            }
        });

        btn_confirmar1.setText("Confirmar");
        btn_confirmar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmar1ActionPerformed(evt);
            }
        });

        tabela4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo Livro", "Nome", "Situa칞칚o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tabela4);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Livros N칚o Devolvidos por um Usu치rio");

        javax.swing.GroupLayout LivrosNaoDevolvidosUsuarioLayout = new javax.swing.GroupLayout(LivrosNaoDevolvidosUsuario);
        LivrosNaoDevolvidosUsuario.setLayout(LivrosNaoDevolvidosUsuarioLayout);
        LivrosNaoDevolvidosUsuarioLayout.setHorizontalGroup(
            LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                .addGroup(LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_confirmar1))
                    .addGroup(LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel7)))
                .addContainerGap(363, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11))
        );
        LivrosNaoDevolvidosUsuarioLayout.setVerticalGroup(
            LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_confirmar1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );

        Root.add(LivrosNaoDevolvidosUsuario, "LivrosNaoDevolvidosUsuario");

        tabela5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Ano", "Situa칞칚o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tabela5);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Todos os Livros");

        javax.swing.GroupLayout TodosLivrosLayout = new javax.swing.GroupLayout(TodosLivros);
        TodosLivros.setLayout(TodosLivrosLayout);
        TodosLivrosLayout.setHorizontalGroup(
            TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosLivrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(TodosLivrosLayout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TodosLivrosLayout.setVerticalGroup(
            TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosLivrosLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Root.add(TodosLivros, "TodosLivros");

        tabela6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Ano"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tabela6);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Livros Disponiveis");

        javax.swing.GroupLayout LivrosDisponiveisLayout = new javax.swing.GroupLayout(LivrosDisponiveis);
        LivrosDisponiveis.setLayout(LivrosDisponiveisLayout);
        LivrosDisponiveisLayout.setHorizontalGroup(
            LivrosDisponiveisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosDisponiveisLayout.createSequentialGroup()
                .addGap(351, 351, 351)
                .addComponent(jLabel9)
                .addContainerGap(420, Short.MAX_VALUE))
            .addGroup(LivrosDisponiveisLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addGap(23, 23, 23))
        );
        LivrosDisponiveisLayout.setVerticalGroup(
            LivrosDisponiveisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosDisponiveisLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Root.add(LivrosDisponiveis, "LivrosDisponiveis");

        tabela7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Ano"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tabela7);
        if (tabela7.getColumnModel().getColumnCount() > 0) {
            tabela7.getColumnModel().getColumn(2).setHeaderValue("Ano");
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Livros Emprestados");

        javax.swing.GroupLayout LivrosEmprestadosLayout = new javax.swing.GroupLayout(LivrosEmprestados);
        LivrosEmprestados.setLayout(LivrosEmprestadosLayout);
        LivrosEmprestadosLayout.setHorizontalGroup(
            LivrosEmprestadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosEmprestadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(LivrosEmprestadosLayout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LivrosEmprestadosLayout.setVerticalGroup(
            LivrosEmprestadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosEmprestadosLayout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Root.add(LivrosEmprestados, "LivrosEmprestados");

        tabela8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome", "Ano"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tabela8);
        if (tabela8.getColumnModel().getColumnCount() > 0) {
            tabela8.getColumnModel().getColumn(2).setHeaderValue("Ano");
        }

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Livros Atrasados");

        javax.swing.GroupLayout LivrosComAtrasoLayout = new javax.swing.GroupLayout(LivrosComAtraso);
        LivrosComAtraso.setLayout(LivrosComAtrasoLayout);
        LivrosComAtrasoLayout.setHorizontalGroup(
            LivrosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosComAtrasoLayout.createSequentialGroup()
                .addContainerGap(405, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(373, 373, 373))
            .addGroup(LivrosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LivrosComAtrasoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        LivrosComAtrasoLayout.setVerticalGroup(
            LivrosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosComAtrasoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel11)
                .addContainerGap(397, Short.MAX_VALUE))
            .addGroup(LivrosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LivrosComAtrasoLayout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        Root.add(LivrosComAtraso, "LivrosComAtraso");

        tabela9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C칩digo", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(tabela9);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Usu치rios com Atraso");

        javax.swing.GroupLayout UsuariosComAtrasoLayout = new javax.swing.GroupLayout(UsuariosComAtraso);
        UsuariosComAtraso.setLayout(UsuariosComAtrasoLayout);
        UsuariosComAtrasoLayout.setHorizontalGroup(
            UsuariosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsuariosComAtrasoLayout.createSequentialGroup()
                .addGap(406, 406, 406)
                .addComponent(jLabel12)
                .addContainerGap(347, Short.MAX_VALUE))
            .addGroup(UsuariosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(UsuariosComAtrasoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 858, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        UsuariosComAtrasoLayout.setVerticalGroup(
            UsuariosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsuariosComAtrasoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel12)
                .addContainerGap(394, Short.MAX_VALUE))
            .addGroup(UsuariosComAtrasoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(UsuariosComAtrasoLayout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        Root.add(UsuariosComAtraso, "UsuariosComAtraso");

        menuRelatorios.setText("Tipo de Relat칩rio");
        menuRelatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRelatoriosActionPerformed(evt);
            }
        });

        menuTodosUsuarios.setText("Todos os Usu치rios");
        menuTodosUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTodosUsuariosActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuTodosUsuarios);

        menuTodosAlunos.setText("Todos os Alunos");
        menuTodosAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTodosAlunosActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuTodosAlunos);

        menuTodosProfessores.setText("Todos os Professores");
        menuTodosProfessores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTodosProfessoresActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuTodosProfessores);

        menuLivrosEmprestadosUsuario.setText("Todos Livros j치 Emprestados por um Usu치rio");
        menuLivrosEmprestadosUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLivrosEmprestadosUsuarioActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuLivrosEmprestadosUsuario);

        menuLivrosNaoDevolvidosUsuario.setText("Livros n칚o Devolvidos por um Usu치rio");
        menuLivrosNaoDevolvidosUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLivrosNaoDevolvidosUsuarioActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuLivrosNaoDevolvidosUsuario);

        menuTodosLivros.setText("Todos Livros");
        menuTodosLivros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTodosLivrosActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuTodosLivros);

        menuLivrosDisponiveis.setText("Livros Disponiveis");
        menuLivrosDisponiveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLivrosDisponiveisActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuLivrosDisponiveis);

        menuLivrosEmprestados.setText("Livros Emprestados");
        menuLivrosEmprestados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLivrosEmprestadosActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuLivrosEmprestados);

        menuLivrosAtraso.setText("Livros com Atraso");
        menuLivrosAtraso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLivrosAtrasoActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuLivrosAtraso);

        menuUsariosAtraso.setText("Usu치rios com Atraso");
        menuUsariosAtraso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuUsariosAtrasoActionPerformed(evt);
            }
        });
        menuRelatorios.add(menuUsariosAtraso);

        jMenuBar1.add(menuRelatorios);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuTodosUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTodosUsuariosActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"TodosUsuarios");
        
       Controlador control = new Controlador();
       ArrayList<Usuario> usuario = control.buscarUsuarioTodos();
       Emprestimo emprestimos;
       DefaultTableModel model = (DefaultTableModel) tabela.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
       if(usuario != null ){
            for(int i = 0; i<usuario.size();i++){
            
                linha[0] = usuario.get(i).getCodUsuario();
                linha[1] = usuario.get(i).getNome();
                emprestimos = control.buscarEmprestimoUsuario(usuario.get(i).getCodUsuario());
                if(emprestimos != null){
                    linha[2] = "SIM";
                    if(emprestimos.getDataDevolucao().compareTo(d) == -1){
                       linha[3] = "SIM";
                    }else{
                        linha[3] = "N츾O";
                    }
                }else{
                    linha[2] = "N츾O";
                    linha[3] = "N츾O";
                }
                model.addRow(linha);
           }
        }
       

    }//GEN-LAST:event_menuTodosUsuariosActionPerformed

    private void menuTodosProfessoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTodosProfessoresActionPerformed
        // TODO add your handling code here:
         CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"TodosProfessores");
        
       Controlador control = new Controlador();
       ArrayList<Usuario> usuario = control.buscarUsuarioTodos();
       Emprestimo emprestimos;
       DefaultTableModel model = (DefaultTableModel) tabela2.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
       if(usuario != null){
            for(int i = 0; i<usuario.size();i++){
                if("Professor".equals(usuario.get(i).getTipo())){
                    linha[0] = usuario.get(i).getCodUsuario();
                    linha[1] = usuario.get(i).getNome();
                    emprestimos = control.buscarEmprestimoUsuario(usuario.get(i).getCodUsuario());
                    if(emprestimos != null){
                        linha[2] = "SIM";
                        if(emprestimos.getDataDevolucao().compareTo(d) == -1){
                           linha[3] = "SIM";
                        }else{
                            linha[3] = "N츾O";
                        }
                    }else{
                        linha[2] = "N츾O";
                        linha[3] = "N츾O";
                    }
                    model.addRow(linha);
               }
            }
        }
       
    }//GEN-LAST:event_menuTodosProfessoresActionPerformed

    private void menuRelatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRelatoriosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuRelatoriosActionPerformed

    private void menuLivrosEmprestadosUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLivrosEmprestadosUsuarioActionPerformed
        // TODO add your handling code here:
        
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"LivrosEmprestadosUsuario");
        
        
    }//GEN-LAST:event_menuLivrosEmprestadosUsuarioActionPerformed

    private void menuTodosAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTodosAlunosActionPerformed
      
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"TodosAlunos");
        
       Controlador control = new Controlador();
       ArrayList<Usuario> usuario = control.buscarUsuarioTodos();
       Emprestimo emprestimos;
       DefaultTableModel model = (DefaultTableModel) tabela1.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
       if(usuario != null){
             for(int i = 0; i<usuario.size();i++){
                if("Aluno".equals(usuario.get(i).getTipo())){
                    linha[0] = usuario.get(i).getCodUsuario();
                    linha[1] = usuario.get(i).getNome();
                    emprestimos = control.buscarEmprestimoUsuario(usuario.get(i).getCodUsuario());
                    if(emprestimos != null){
                        linha[2] = "SIM";
                        if(emprestimos.getDataDevolucao().compareTo(d) == -1){
                           linha[3] = "SIM";
                        }else{
                            linha[3] = "N츾O";
                        }
                    }else{
                        linha[2] = "N츾O";
                        linha[3] = "N츾O";
                    }
                    model.addRow(linha);
               }
            }
        }
    }//GEN-LAST:event_menuTodosAlunosActionPerformed

    private void text1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text1ActionPerformed

    private void btn_confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarActionPerformed
        // TODO add your handling code here:
        
        
       
       Controlador control = new Controlador();
       ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
       ArrayList<Item> itens;
       Livro livros;
       DefaultTableModel model = (DefaultTableModel) tabela3.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
        String codUsuario = text1.getText();
        if(codUsuario != null && emprestimos != null){
            for(int i = 0; i<emprestimos.size();i++){
            
                if(codUsuario.equals(emprestimos.get(i).getCodUsuario())){
                    itens = emprestimos.get(i).getItens();
                    for(int j = 0; j<itens.size();j++){
                        livros = control.buscaLivro(itens.get(j).getCodLivro());
                        linha[0] = livros.getCodLivro();
                        linha[1] = livros.getNome();

                        if(emprestimos.get(i).getDataDevolucao().compareTo(d)== -1 && itens.get(j).getDataDevolucao() == null){
                            linha[2] = "ATRASADO";
                        }else{
                            linha[2] = "EMPRESTADO";
                        }


                        model.addRow(linha);
                    }

               }
             }
        }
       
       
        
    }//GEN-LAST:event_btn_confirmarActionPerformed

    private void text1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_text1KeyPressed

    private void text2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text2ActionPerformed

    private void text2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_text2KeyPressed

    private void btn_confirmar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmar1ActionPerformed
        // TODO add your handling code here:
        Controlador control = new Controlador();
       ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
       ArrayList<Item> itens;
       Livro livros;
       DefaultTableModel model = (DefaultTableModel) tabela4.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
        String codUsuario = text2.getText();
        if(codUsuario != null){
            for(int i = 0; i<emprestimos.size();i++){
            
                if(codUsuario.equals(emprestimos.get(i).getCodUsuario())){
                    itens = emprestimos.get(i).getItens();
                    for(int j = 0; j<itens.size();j++){
                        livros = control.buscaLivro(itens.get(j).getCodLivro());
                        linha[0] = livros.getCodLivro();
                        linha[1] = livros.getNome();

                        if(emprestimos.get(i).getDataDevolucao().compareTo(d)== -1 && itens.get(j).getDataDevolucao() != null ){
                            linha[2] = "DEVOLVIDO";
                        }else if(emprestimos.get(i).getDataDevolucao().compareTo(d)== -1 && itens.get(j).getDataDevolucao() == null){
                            linha[2] = "ATRASADO";
                        }else{
                            linha[2] = "EMPRESTADO";
                        }


                        model.addRow(linha);
                    }

               }
             }
        }
       
    }//GEN-LAST:event_btn_confirmar1ActionPerformed

    private void menuLivrosNaoDevolvidosUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLivrosNaoDevolvidosUsuarioActionPerformed
        // TODO add your handling code here:
        
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"LivrosNaoDevolvidosUsuario");
        
    }//GEN-LAST:event_menuLivrosNaoDevolvidosUsuarioActionPerformed

    private void menuTodosLivrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTodosLivrosActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"TodosLivros");
        
       Controlador control = new Controlador();
       ArrayList<Livro> livros = control.buscarLivroTodos();
       DefaultTableModel model = (DefaultTableModel) tabela5.getModel();
       Object linha[] = new Object[4];
      
        
       if(livros != null){
           for(int i=0;i<livros.size();i++){
           linha[0] = livros.get(i).getCodLivro();
           linha[1] = livros.get(i).getNome();
           linha[2] = livros.get(i).getAno();
           if(livros.get(i).estaEmprestado()){
               linha[3] = "EMPRESTADO";
           }else{
               linha[3] = "DISPONIVEL";
           }
           model.addRow(linha);
       }    
       }
       
       
    }//GEN-LAST:event_menuTodosLivrosActionPerformed

    private void menuLivrosDisponiveisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLivrosDisponiveisActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"LivrosDisponiveis");
        
       Controlador control = new Controlador();
       ArrayList<Livro> livros = control.buscarLivroTodos();
       DefaultTableModel model = (DefaultTableModel) tabela6.getModel();
       Object linha[] = new Object[4];
      
        
       if(livros != null){
           for(int i=0;i<livros.size();i++){
           
            if(livros.get(i).estaEmprestado() == false){
                 linha[0] = livros.get(i).getCodLivro();
                 linha[1] = livros.get(i).getNome();
                 linha[2] = livros.get(i).getAno();
                  model.addRow(linha);
            }

          }    
       }
       
       
        
    }//GEN-LAST:event_menuLivrosDisponiveisActionPerformed

    private void menuLivrosEmprestadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLivrosEmprestadosActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"LivrosEmprestados");
        
         Controlador control = new Controlador();
       ArrayList<Livro> livros = control.buscarLivroTodos();
       DefaultTableModel model = (DefaultTableModel) tabela7.getModel();
       Object linha[] = new Object[4];
      
        
       if(livros != null){
           for(int i=0;i<livros.size();i++){
            if(livros.get(i).estaEmprestado()){
                 linha[0] = livros.get(i).getCodLivro();
                 linha[1] = livros.get(i).getNome();
                 linha[2] = livros.get(i).getAno();
                 model.addRow(linha);
            }

         }    
       }
       
    }//GEN-LAST:event_menuLivrosEmprestadosActionPerformed

    private void menuLivrosAtrasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLivrosAtrasoActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"LivrosComAtraso");
        
        Controlador control = new Controlador();
        ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
        ArrayList<Item> itens;
        Livro livros;
        DefaultTableModel model = (DefaultTableModel) tabela8.getModel();
        Object linha[] = new Object[4];
        Calendar d = Calendar.getInstance();
 
        if(emprestimos != null){
            for(int i = 0; i<emprestimos.size();i++){
                itens = emprestimos.get(i).getItens();
                if(emprestimos.get(i).getDataDevolucao().compareTo(d) == -1){
                    for(int j = 0; j<itens.size();j++){
                        livros = control.buscaLivro(itens.get(j).getCodLivro());
                        linha[0] = livros.getCodLivro();
                        linha[1] = livros.getNome();
                        linha[2] = livros.getAno();
                        model.addRow(linha);
                    }
                }
             }
        }
       
 
    }//GEN-LAST:event_menuLivrosAtrasoActionPerformed

    private void menuUsariosAtrasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuUsariosAtrasoActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"UsuariosComAtraso");
        
        Controlador control = new Controlador();
       
       ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
       DefaultTableModel model = (DefaultTableModel) tabela9.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
       if(emprestimos != null){
           for(int i = 0; i<emprestimos.size();i++){
                if(emprestimos.get(i).getDataDevolucao().compareTo(d) == -1){
                      linha[0] = emprestimos.get(i).getCodUsuario();
                      linha[1] = control.buscarUsuario(emprestimos.get(i).getCodUsuario());
                      model.addRow(linha);
                }

           }
       }
       
    }//GEN-LAST:event_menuUsariosAtrasoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IURelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IURelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IURelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IURelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IURelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inicio;
    private javax.swing.JPanel LivrosComAtraso;
    private javax.swing.JPanel LivrosDisponiveis;
    private javax.swing.JPanel LivrosEmprestados;
    private javax.swing.JPanel LivrosEmprestadosUsuario;
    private javax.swing.JPanel LivrosNaoDevolvidosUsuario;
    private javax.swing.JPanel Root;
    private javax.swing.JPanel TodosAlunos;
    private javax.swing.JPanel TodosLivros;
    private javax.swing.JPanel TodosProfessores;
    private javax.swing.JPanel TodosUsuarios;
    private javax.swing.JPanel UsuariosComAtraso;
    private javax.swing.JButton btn_confirmar;
    private javax.swing.JButton btn_confirmar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JMenuItem menuLivrosAtraso;
    private javax.swing.JMenuItem menuLivrosDisponiveis;
    private javax.swing.JMenuItem menuLivrosEmprestados;
    private javax.swing.JMenuItem menuLivrosEmprestadosUsuario;
    private javax.swing.JMenuItem menuLivrosNaoDevolvidosUsuario;
    private javax.swing.JMenu menuRelatorios;
    private javax.swing.JMenuItem menuTodosAlunos;
    private javax.swing.JMenuItem menuTodosLivros;
    private javax.swing.JMenuItem menuTodosProfessores;
    private javax.swing.JMenuItem menuTodosUsuarios;
    private javax.swing.JMenuItem menuUsariosAtraso;
    private javax.swing.JTable tabela;
    private javax.swing.JTable tabela1;
    private javax.swing.JTable tabela2;
    private javax.swing.JTable tabela3;
    private javax.swing.JTable tabela4;
    private javax.swing.JTable tabela5;
    private javax.swing.JTable tabela6;
    private javax.swing.JTable tabela7;
    private javax.swing.JTable tabela8;
    private javax.swing.JTable tabela9;
    private javax.swing.JTextField text1;
    private javax.swing.JTextField text2;
    // End of variables declaration//GEN-END:variables
}
