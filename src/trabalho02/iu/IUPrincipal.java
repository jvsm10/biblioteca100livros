/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * IUPrincipal.java
 *
 * Created on 24/05/2013, 23:19:53
 */
package trabalho02.iu;

//

import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import trabalho02.controlador.Controlador;
import trabalho02.modelo.Emprestimo;
import trabalho02.modelo.Item;
import trabalho02.modelo.Livro;
import trabalho02.modelo.Usuario;

/**
 *
 * @author Danilo Medeiros Eler
 */
public class IUPrincipal extends javax.swing.JFrame {

    /** Creates new form IUPrincipal */
    public IUPrincipal() {
        initComponents();
        iconJanela();
        tam();
        relatorio.setSelectedIndex(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator5 = new javax.swing.JSeparator();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        popupMenu1 = new java.awt.PopupMenu();
        canvas1 = new java.awt.Canvas();
        jComboBox1 = new javax.swing.JComboBox<>();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        alerta = new javax.swing.JLabel();
        relatorio = new javax.swing.JComboBox<>();
        Root = new javax.swing.JPanel();
        Inicio = new javax.swing.JPanel();
        TodosUsuarios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        pesquisa1 = new javax.swing.JTextField();
        LivrosEmprestadosUsuario = new javax.swing.JPanel();
        text1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_confirmar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaEmprestado = new javax.swing.JTable();
        LivrosNaoDevolvidosUsuario = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        codText = new javax.swing.JTextField();
        btn_confirmar1 = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        tabelaNaoDevolvido = new javax.swing.JTable();
        TodosLivros = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaLivros = new javax.swing.JTable();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        pesquisa = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem16 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        botaoSair = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        popupMenu1.setLabel("popupMenu1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 400));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Olá Marilene");
        jLabel1.setEnabled(false);

        alerta.setText("jLabel2");

        relatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Relatorios", "Usuarios", "Livros", "Todos Livros já Emprestados para um Usuário", "Livros não Devolvidos por um Usuário" }));
        relatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioActionPerformed(evt);
            }
        });

        Root.setLayout(new java.awt.CardLayout());

        Inicio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                InicioFocusGained(evt);
            }
        });

        javax.swing.GroupLayout InicioLayout = new javax.swing.GroupLayout(Inicio);
        Inicio.setLayout(InicioLayout);
        InicioLayout.setHorizontalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
        );
        InicioLayout.setVerticalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        Root.add(Inicio, "inicio");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Possui Emprestimo", "Possui Atraso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabela);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Todos Usuarios");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Professores");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Alunos");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setText("Usuarios com Atrasos");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        pesquisa1.setText("Pesquisar por Nome dos Usuarios Cadastrados");
        pesquisa1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pesquisa1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pesquisa1FocusLost(evt);
            }
        });
        pesquisa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisa1ActionPerformed(evt);
            }
        });
        pesquisa1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisa1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout TodosUsuariosLayout = new javax.swing.GroupLayout(TodosUsuarios);
        TodosUsuarios.setLayout(TodosUsuariosLayout);
        TodosUsuariosLayout.setHorizontalGroup(
            TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosUsuariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addGroup(TodosUsuariosLayout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosUsuariosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pesquisa1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        TodosUsuariosLayout.setVerticalGroup(
            TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosUsuariosLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(TodosUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosUsuariosLayout.createSequentialGroup()
                    .addContainerGap(272, Short.MAX_VALUE)
                    .addComponent(pesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        Root.add(TodosUsuarios, "TodosUsuarios");

        text1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        text1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                text1FocusLost(evt);
            }
        });
        text1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text1ActionPerformed(evt);
            }
        });
        text1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text1KeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Código do Usuário:");

        btn_confirmar.setText("Confirmar");
        btn_confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarActionPerformed(evt);
            }
        });

        tabelaEmprestado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Livro", "Nome", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabelaEmprestado);

        javax.swing.GroupLayout LivrosEmprestadosUsuarioLayout = new javax.swing.GroupLayout(LivrosEmprestadosUsuario);
        LivrosEmprestadosUsuario.setLayout(LivrosEmprestadosUsuarioLayout);
        LivrosEmprestadosUsuarioLayout.setHorizontalGroup(
            LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addGroup(LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_confirmar)))
                .addContainerGap())
        );
        LivrosEmprestadosUsuarioLayout.setVerticalGroup(
            LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosEmprestadosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LivrosEmprestadosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_confirmar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        Root.add(LivrosEmprestadosUsuario, "LivrosEmprestadosUsuario");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Código do Usuário:");

        codText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                codTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                codTextFocusLost(evt);
            }
        });
        codText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codTextActionPerformed(evt);
            }
        });
        codText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codTextKeyTyped(evt);
            }
        });

        btn_confirmar1.setText("Confirmar");
        btn_confirmar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmar1ActionPerformed(evt);
            }
        });

        tabelaNaoDevolvido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Livro", "Nome", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tabelaNaoDevolvido);

        javax.swing.GroupLayout LivrosNaoDevolvidosUsuarioLayout = new javax.swing.GroupLayout(LivrosNaoDevolvidosUsuario);
        LivrosNaoDevolvidosUsuario.setLayout(LivrosNaoDevolvidosUsuarioLayout);
        LivrosNaoDevolvidosUsuarioLayout.setHorizontalGroup(
            LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addGroup(LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_confirmar1)))
                .addContainerGap())
        );
        LivrosNaoDevolvidosUsuarioLayout.setVerticalGroup(
            LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LivrosNaoDevolvidosUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LivrosNaoDevolvidosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(codText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_confirmar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        Root.add(LivrosNaoDevolvidosUsuario, "LivrosNaoDevolvidosUsuario");

        tabelaLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Ano", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaLivros.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tabelaLivros);

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("Todos Livros");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText("Emprestados");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setText("Disponiveis");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton8);
        jRadioButton8.setText("Livros Com Atraso");
        jRadioButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton8ActionPerformed(evt);
            }
        });

        pesquisa.setText("Pesquisar por Nome dos Alunos Cadastrados");
        pesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pesquisaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pesquisaFocusLost(evt);
            }
        });
        pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisaActionPerformed(evt);
            }
        });
        pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout TodosLivrosLayout = new javax.swing.GroupLayout(TodosLivros);
        TodosLivros.setLayout(TodosLivrosLayout);
        TodosLivrosLayout.setHorizontalGroup(
            TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TodosLivrosLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(TodosLivrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosLivrosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        TodosLivrosLayout.setVerticalGroup(
            TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosLivrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(TodosLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TodosLivrosLayout.createSequentialGroup()
                    .addContainerGap(272, Short.MAX_VALUE)
                    .addComponent(pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        Root.add(TodosLivros, "TodosLivros");

        jMenu5.setText("Dados");

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem14.setText("Salvar Dados");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem14);

        jMenuItem15.setText("Carregar Dados");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem15);
        jMenu5.add(jSeparator3);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem16.setText("Configurações");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem16);
        jMenu5.add(jSeparator6);

        botaoSair.setText("Sair");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });
        jMenu5.add(botaoSair);

        jMenuBar1.add(jMenu5);

        jMenu1.setText("Cadastros");

        jMenuItem19.setText("Usuários");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem19);

        jMenuItem3.setText("Livros");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Movimentação");

        jMenuItem4.setText("Empréstimo");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Devolução");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(relatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(alerta, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                        .addGap(112, 112, 112)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Root, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(relatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 335, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alerta)
                    .addComponent(jLabel1))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(Root, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(33, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iconJanela(){
        ImageIcon img = new ImageIcon(".\\src\\Imagens\\book.png");
        setIconImage(img.getImage());
    }
    private void tam(){
        tabela.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabela.getColumnModel().getColumn(1).setPreferredWidth(250);
        tabela.getColumnModel().getColumn(2).setPreferredWidth(80);
        tabela.getColumnModel().getColumn(3).setPreferredWidth(80);
        tabelaLivros.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabelaLivros.getColumnModel().getColumn(1).setPreferredWidth(250);
        tabelaLivros.getColumnModel().getColumn(2).setPreferredWidth(40);
        tabelaLivros.getColumnModel().getColumn(3).setPreferredWidth(80);
        tabelaNaoDevolvido.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabelaNaoDevolvido.getColumnModel().getColumn(1).setPreferredWidth(250);
        tabelaNaoDevolvido.getColumnModel().getColumn(2).setPreferredWidth(100);
        tabelaEmprestado.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabelaEmprestado.getColumnModel().getColumn(1).setPreferredWidth(250);
        tabelaEmprestado.getColumnModel().getColumn(2).setPreferredWidth(100);
        
    }
    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        Controlador control = new Controlador();
        IUConfig iuConfig = IUConfig.getInstancia(this);
        iuConfig.exibir(control.getConfiguracoes());

        //alternativamente, podemos chamar assim:
        //IUConfig.getInstancia(this).exibir(biblioteca.getConfiguracoes());
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        Controlador control = new Controlador();
        String msg;
        String msgf="";
        ImageIcon icon = new ImageIcon(".\\src\\Imagens\\error.png");
        
        msg= control.salvarLivros();
        if(!msg.isEmpty()) msgf+= msg+"\n";
        msg = control.salvarUsuarios();
        if(!msg.isEmpty()) msgf+= msg+"\n";
        msg=control.salvarEmprestimos();
        if(!msg.isEmpty()) msgf+= msg+"\n";
        msg=control.salvarConfig();
        if(!msg.isEmpty()) msgf+=msg+"\n";
    
        if(!msgf.isEmpty())JOptionPane.showMessageDialog(rootPane, msgf+"\nPOR FAVOR, Altere"
        + " o caminho dos arquivos \n\tcorrompidos em configurações (Ctrl+F)","ERROR", HEIGHT, icon); 
        else{
            alerta.setText("Dados Salvos com Sucesso");
            alerta.setVisible(true);
        }
       
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        Controlador control = new Controlador();
        control.recuperarLivros(); //carrega livros do arquivo
        control.recuperarUsuarios();
        control.recuperarEmprestimos();
        control.recuperarConfig();
        relatorio.setSelectedIndex(0);
        alerta.setText("Dados Carregados com Sucesso");
        alerta.setVisible(true);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        IUAddLivro livro = new IUAddLivro(this, true);
        livro.setLocationRelativeTo(this);
        livro.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_botaoSairActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        // TODO add your handling code here:
        IUAddUsuario user = new IUAddUsuario(this, true);
        user.setLocationRelativeTo(this);
        user.setVisible(true);
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        IUEmprestimo empresta = new IUEmprestimo(this,true);
        empresta.setLocationRelativeTo(this);
        empresta.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        IUDevolucao devolucao = new IUDevolucao(this,true);
        devolucao.setLocationRelativeTo(this);
        devolucao.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed
 
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        relatorio.setSelectedIndex(0);
        alerta.setVisible(false);
    }//GEN-LAST:event_formWindowGainedFocus
    
    private void relLivro(int qual){
       Controlador control = new Controlador();
       ArrayList<Livro> li=null;
       DefaultTableModel model = (DefaultTableModel) tabelaLivros.getModel();
       String estado = null;
        Object linha[] = new Object[4];
       li = control.buscarLivroTodos();
       
       if(li != null){
           if(qual == 1){
           for(Livro livro: li){
               if(livro.estaEmprestado()) estado="Emprestado";      
               else if(!livro.estaEmprestado()) estado="Livre";      
                 
               linha[0] = livro.getCodLivro();      
               linha[1] = livro.getNome();        
               linha[2] = livro.getAno();       
               linha[3] = estado;    
               model.addRow(linha);
           }
        }
           else if(qual == 2){
            for(int i=0;i<li.size();i++){
            if(li.get(i).estaEmprestado()){
                 linha[0] = li.get(i).getCodLivro();
                 linha[1] = li.get(i).getNome();
                 linha[2] = li.get(i).getAno();
                 linha[3] = "SIM";
                 model.addRow(linha);
            }
            }
           }
            else if(qual == 3){
                
                for(int i=0;i<li.size();i++){
                    if(li.get(i).estaEmprestado() == false){
                         linha[0] = li.get(i).getCodLivro();
                         linha[1] = li.get(i).getNome();
                         linha[2] = li.get(i).getAno();
                         linha[3] = "NAO";
                         model.addRow(linha);
                    }

                }  
            }
       }
    }
      
    private void relUser(int qual){
               
       removerTabelaUsuarios();
       Controlador control = new Controlador();
       ArrayList<Usuario> usuario=null;
       switch(qual){
           case 1: 
               usuario = control.buscarUsuarioTodos();
               break;
           case 2:
               usuario = control.getUserBusca("Professor");
               break;
           case 3:
               usuario = control.getUserBusca("Aluno");
               break;
       }
       Emprestimo emprestimos;
       DefaultTableModel model = (DefaultTableModel) tabela.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
       if(usuario != null ){
            for(int i = 0; i<usuario.size();i++){
            
                linha[0] = usuario.get(i).getCodUsuario();
                linha[1] = usuario.get(i).getNome();
                emprestimos = control.buscarEmprestimoUsuario(usuario.get(i).getCodUsuario());
                if(emprestimos != null){
                    linha[2] = "SIM";
                    if(emprestimos.getDataDevolucao().compareTo(d) == -1){
                       linha[3] = "SIM";
                    }else{
                        linha[3] = "NÃO";
                    }
                }else{
                    linha[2] = "NÃO";
                    linha[3] = "NÃO";
                }
                model.addRow(linha);
           }
        }
       
    }

    private void relatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioActionPerformed
        // TODO add your handling code here:
        int rel = relatorio.getSelectedIndex();
        CardLayout c1 = (CardLayout) Root.getLayout();
        alerta.setVisible(false);
        removerTabelaLivros();
        removerTabelaUsuarios();
        removerTabelaNaoDevolvido();
        removerTabelaEmprestado();
                

        System.out.println(rel);
        switch(rel){
            case 0:
                c1.show(Root, "inicio");
                break;
            case 1:
                jRadioButton1.setSelected(true);
                c1.show(Root, "TodosUsuarios");
                relUser(1);
                break;
            case 2:
                jRadioButton4.setSelected(true);
                c1.show(Root, "TodosLivros");
                relLivro(1);
                break;
            case 3:
                c1.show(Root, "LivrosEmprestadosUsuario");
                break;
            case 4:
                c1.show(Root,"LivrosNaoDevolvidosUsuario");
                break;
        }
    }//GEN-LAST:event_relatorioActionPerformed

    private void InicioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InicioFocusGained
        // TODO add your handling code here:
//        menuTodosUsuarios.requestFocus();
    }//GEN-LAST:event_InicioFocusGained

    private void codTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codTextActionPerformed

    private void codTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codTextKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btn_confirmar1.requestFocus();
        }
    }//GEN-LAST:event_codTextKeyPressed

    private void btn_confirmar1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        Controlador control = new Controlador();
        ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
        ArrayList<Item> itens;
        Livro livros;
        DefaultTableModel model = (DefaultTableModel) tabelaNaoDevolvido.getModel();
        Object linha[] = new Object[4];
        Calendar d = Calendar.getInstance();
            
        String codUsuario = codText.getText();
        int tam = tabelaNaoDevolvido.getRowCount();
        for(int i=0; i<tam; i++){
            model.removeRow(0);
        }
        Usuario user =control.buscarUsuario(codUsuario);
        if(user==null){
            alerta.setText("Usuario Não Cadastrado");
            alerta.setVisible(true);
            text1.setText("");
            text1.requestFocus();
        }
        else if(codUsuario != null && emprestimos != null){
            for(int i = 0; i<emprestimos.size();i++){
                if(codUsuario.equals(emprestimos.get(i).getCodUsuario())){
                    
                    itens = emprestimos.get(i).getItens();
                    for(int j = 0; j<itens.size();j++){
                        livros = control.buscaLivro(itens.get(j).getCodLivro());
                        linha[0] = livros.getCodLivro();
                        linha[1] = livros.getNome();

                        if(emprestimos.get(i).getDataDevolucao().compareTo(d)== -1 && itens.get(j).getDataDevolucao() == null){
                            linha[2] = "ATRASADO";
                        }else{
                            linha[2] = "EMPRESTADO";
                        }

                        model.addRow(linha);         
                    }
                    alerta.setText(user.getTipo()+"   "+user.getNome());
                    alerta.setVisible(true);
                }
                
            }
        }
        
    }
                                        
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        removerTabelaUsuarios();
        relUser(1);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        removerTabelaUsuarios();
        relUser(2);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        removerTabelaUsuarios();
        relUser(3);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        removerTabelaLivros();
        relLivro(1);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
        removerTabelaLivros();
        relLivro(2);
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
       removerTabelaLivros();
        relLivro(3);
       
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        // TODO add your handling code here:
        CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"Todos Usuarios");
        
        Controlador control = new Controlador();
       
       ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
       DefaultTableModel model = (DefaultTableModel) tabela.getModel();
       Object linha[] = new Object[4];
       Calendar d = Calendar.getInstance();
       
       int tam = tabela.getRowCount();
        for(int i=0; i<tam; i++){
             model.removeRow(0);
        }
       if(emprestimos != null){
           
           for(int i = 0; i<emprestimos.size();i++){
                if(emprestimos.get(i).getDataDevolucao().compareTo(d) == -1){
                      linha[0] = emprestimos.get(i).getCodUsuario();
                      linha[1] = control.buscarUsuario(emprestimos.get(i).getCodUsuario()).getNome();
                      linha[2] = "SIM";
                      linha[3] = "SIM";
                      model.addRow(linha);
                }

           }
       }
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    private void jRadioButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton8ActionPerformed
        // TODO add your handling code here:
                CardLayout c1 = (CardLayout) Root.getLayout();
        c1.show(Root,"TodosLivros");
        
        Controlador control = new Controlador();
        ArrayList<Emprestimo> emprestimos = control.buscarEmprestimoTodos();
        ArrayList<Item> itens;
        Livro livros;
        DefaultTableModel model = (DefaultTableModel) tabelaLivros.getModel();
        Object linha[] = new Object[4];
        Calendar d = Calendar.getInstance();
 
        int tam = tabelaLivros.getRowCount();
        for(int i=0; i<tam; i++){
          model.removeRow(0);
         }
        if(emprestimos != null){
            
            for(int i = 0; i<emprestimos.size();i++){
                itens = emprestimos.get(i).getItens();
                if(emprestimos.get(i).getDataDevolucao().compareTo(d) == -1){
                    for(int j = 0; j<itens.size();j++){
                        livros = control.buscaLivro(itens.get(j).getCodLivro());
                        linha[0] = livros.getCodLivro();
                        linha[1] = livros.getNome();
                        linha[2] = livros.getAno();
                        linha[3] = "Emprestado";
                        model.addRow(linha);
                    }
                }
             }
        }
       
 
    }//GEN-LAST:event_jRadioButton8ActionPerformed

    private void codTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codTextKeyTyped
        // TODO add your handling code here:
        if(codText.getText().length() == 6){
            evt.consume();
        }
    }//GEN-LAST:event_codTextKeyTyped

    private void codTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codTextFocusLost
        // TODO add your handling code here:
       String codFormatar = codText.getText();
       if(!codFormatar.isEmpty()){
        while(codFormatar.length()<6){
            codFormatar = "0"+codFormatar;
        }
     }
       codText.setText(codFormatar);
    }//GEN-LAST:event_codTextFocusLost

    private void pesquisaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pesquisaFocusGained
        // TODO add your handling code here:
        pesquisa.setText("");
    }//GEN-LAST:event_pesquisaFocusGained

    private void pesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pesquisaFocusLost
        // TODO add your handling code here:
        pesquisa.setText("Pesquisar por Nome dos Alunos Cadastrados");
        tabelaLivros.setRowSorter(null);
    }//GEN-LAST:event_pesquisaFocusLost

    private void pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pesquisaActionPerformed

    private void pesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaKeyReleased
        // TODO add your handling code here:
        pesquisa.setText(pesquisa.getText().replaceAll("[^A-Z | ^a-z]",""));
        DefaultTableModel model = (DefaultTableModel) tabelaLivros.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tabelaLivros.setRowSorter(sorter);
        String texto = pesquisa.getText().toUpperCase();
        if(texto.length() != 0){
            sorter.setRowFilter(RowFilter.regexFilter(texto));       
        }
    }//GEN-LAST:event_pesquisaKeyReleased

    private void pesquisa1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pesquisa1FocusGained
        // TODO add your handling code here:
        pesquisa1.setText("");
    }//GEN-LAST:event_pesquisa1FocusGained

    private void pesquisa1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pesquisa1FocusLost
        // TODO add your handling code here:
        pesquisa1.setText("Pesquisar por Nome dos Usuarios Cadastrados");
        tabela.setRowSorter(null);
    }//GEN-LAST:event_pesquisa1FocusLost

    private void pesquisa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisa1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pesquisa1ActionPerformed

    private void pesquisa1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisa1KeyReleased
        // TODO add your handling code here:
        pesquisa1.setText(pesquisa1.getText().replaceAll("[^A-Z | ^a-z]",""));
        TableRowSorter<TableModel> sorter = null;
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        sorter = new TableRowSorter<>(model);
        tabela.setRowSorter(sorter);
        String texto = pesquisa1.getText().toUpperCase();
        if(texto.length() != 0){
            sorter.setRowFilter(RowFilter.regexFilter(texto));
        }
    }//GEN-LAST:event_pesquisa1KeyReleased

    private void btn_confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarActionPerformed
        // TODO add your handling code here:
        Controlador control = new Controlador();
        ArrayList<Usuario> usu = control.buscarUsuarioTodos();
        Emprestimo emprestimo;
        ArrayList<String> codlivro;
        DefaultTableModel model = (DefaultTableModel) tabelaEmprestado.getModel();
        Object linha[] = new Object[4];
        Calendar d = Calendar.getInstance();
            
        String codUsuario = text1.getText();
        int tam = tabelaEmprestado.getRowCount();
        for(int i=0; i<tam; i++){
            model.removeRow(0);
        }
        Usuario user=control.buscarUsuario(codUsuario);
        if(user==null){
            alerta.setText("Usuario Não Cadastrado");
            alerta.setVisible(true);
            text1.setText("");
            text1.requestFocus();
        }
        else if(codUsuario != null && usu != null){
            for(int i = 0; i<usu.size();i++){
                if(codUsuario.equals(usu.get(i).getCodUsuario())){
                    if(!usu.get(i).getHistorico().isEmpty()){
                    codlivro = usu.get(i).getHistorico();
                    for(int j = 0; j<codlivro.size();j++){
                        linha[0] = codlivro.get(j);
                        Livro livro = control.buscaLivro(codlivro.get(j));
                        linha[1] = livro.getNome();
                        if(livro.estaEmprestado() == false){
                            linha[2] = "DEVOLVIDO";
                        }else{
                            emprestimo = control.buscarEmprestimoUsuario(usu.get(i).getCodUsuario());
                            if(emprestimo.getDataDevolucao().compareTo(d)== -1){
                                if(usu.get(i).buscaLivro(codlivro.get(j),j)==false)
                                linha[2] = "ATRASADO";
                                else linha[2] = "DEVOLVIDO";
                        }else{
                                if(usu.get(i).buscaLivro(codlivro.get(j),j)==false)
                                linha[2] = "EMPRESTADO";
                                else linha[2] = "DEVOLVIDO";
                        }    
                    }
                    model.addRow(linha);
               }
                    alerta.setText(user.getTipo()+"   "+user.getNome());
                    alerta.setVisible(true);
             }
            }
            }
        }
    }//GEN-LAST:event_btn_confirmarActionPerformed

    private void text1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text1KeyTyped
        // TODO add your handling code here:
      if(text1.getText().length() == 6){
            evt.consume();
        } 
    }//GEN-LAST:event_text1KeyTyped

    private void text1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
                 btn_confirmar.requestFocus();
        }
    }//GEN-LAST:event_text1KeyPressed

    private void text1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text1ActionPerformed

    private void text1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text1FocusLost
        // TODO add your handling code here:
        String codFormatar = text1.getText();
        if(!codFormatar.isEmpty()){
            while(codFormatar.length()<6){
                codFormatar = "0"+codFormatar;
            }
        }
        text1.setText(codFormatar);
    }//GEN-LAST:event_text1FocusLost

    private void codTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codTextKeyReleased
        // TODO add your handling code here:
        codText.setText(codText.getText().replaceAll("[^0-9]",""));
    }//GEN-LAST:event_codTextKeyReleased

    private void text1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text1KeyReleased
        // TODO add your handling code here:
        text1.setText(text1.getText().replaceAll("[^0-9]",""));
    }//GEN-LAST:event_text1KeyReleased

    private void text1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text1FocusGained
        // TODO add your handling code here:
        text1.setText("");
    }//GEN-LAST:event_text1FocusGained

    private void codTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codTextFocusGained
        // TODO add your handling code here:
        codText.setText("");
    }//GEN-LAST:event_codTextFocusGained

        private void removerTabelaLivros(){
       DefaultTableModel model = (DefaultTableModel) tabelaLivros.getModel();
       int tam = tabelaLivros.getRowCount();
       for(int i=0; i<tam; i++){
           model.removeRow(0);
       }
    }
       private void removerTabelaUsuarios(){
       DefaultTableModel model = (DefaultTableModel) tabela.getModel();
       int tam = tabela.getRowCount();
       for(int i=0; i<tam; i++){
           model.removeRow(0);
       }
    } 
      private void removerTabelaNaoDevolvido(){
       codText.setText("");
       DefaultTableModel model = (DefaultTableModel) tabelaNaoDevolvido.getModel();
       int tam = tabelaNaoDevolvido.getRowCount();
       for(int i=0; i<tam; i++){
           model.removeRow(0);
       }
    } 
      private void removerTabelaEmprestado(){
          text1.setText("");
       DefaultTableModel model = (DefaultTableModel) tabelaEmprestado.getModel();
       int tam = tabelaEmprestado.getRowCount();
       for(int i=0; i<tam; i++){
           model.removeRow(0);
       }
    } 
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new IUPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inicio;
    private javax.swing.JPanel LivrosEmprestadosUsuario;
    private javax.swing.JPanel LivrosNaoDevolvidosUsuario;
    private javax.swing.JPanel Root;
    private javax.swing.JPanel TodosLivros;
    private javax.swing.JPanel TodosUsuarios;
    private javax.swing.JLabel alerta;
    private javax.swing.JMenuItem botaoSair;
    private javax.swing.JButton btn_confirmar;
    private javax.swing.JButton btn_confirmar1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private java.awt.Canvas canvas1;
    private javax.swing.JTextField codText;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTextField pesquisa;
    private javax.swing.JTextField pesquisa1;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JComboBox<String> relatorio;
    private javax.swing.JTable tabela;
    private javax.swing.JTable tabelaEmprestado;
    private javax.swing.JTable tabelaLivros;
    private javax.swing.JTable tabelaNaoDevolvido;
    private javax.swing.JTextField text1;
    // End of variables declaration//GEN-END:variables
}
